If you are a Windows user and want to compile Retro Graphics Toolkit you will
need Mingw or Mingw-w64.

Note that Lua needs to be compiled locally. Do not use your systems
installation of Lua. This is because Lua is compiled with a C++ compiler in
order to take advantage of zero cost exceptions.

First of all in the Retro Graphics Toolkit directory create a folder called lua
or luawin if you are compiling for Windows. This folder shall the latest
version of Lua. The folder should not contain a folder called something to the
effect of lua/lua-version-number.

Extract the latest version of Lua in the newly created folder.

Now edit the makefile in src. Edit the line that starts with CC=gcc and change
it to: CC=g++ or CC=clang++ removing anything that follows it.

On the line that starts with CFLAGS= remove -DLUA_COMPAT_5_2

If you are using a cross compiler make sure to take into account it's prefix
also you will need to modify the AR and RANLIB variables if such is the case.

Also if you are building on Windows you must replace this line in the Makefile
	"AR=$(CC) -shared -o" "RANLIB=strip --strip-unneeded" \
with
	"AR=$(CC) -shared -static-libgcc -static-libstdc++ -o" "RANLIB=strip --strip-all" \

If you are building on Mac OS X replace (in lua/src/Makefile):
	$(MAKE) $(ALL) SYSCFLAGS="-DLUA_USE_MACOSX" SYSLIBS="-lreadline" CC=cc
with
	$(MAKE) $(ALL) SYSCFLAGS="-DLUA_USE_MACOSX" SYSLIBS="-lreadline"

If you are building on Linux replace (in lua/src/Makefile):
	$(MAKE) $(ALL) SYSCFLAGS="-DLUA_USE_LINUX" SYSLIBS="-Wl,-E -ldl -lreadline" CC=cc
with
	$(MAKE) $(ALL) SYSCFLAGS="-DLUA_USE_LINUX" SYSLIBS="-Wl,-E -ldl -lreadline"

In other words remove CC=cc from the end of the line.

We should not override the CC variable which we specified earlier. We need to use the system's C++ compiler.

We build Lua using C++ in order to take advantage of of zero cost exception
handling using throw.

The reason Lua is built even though many distributions already provide Lua is
so that the latest version is used and so that this version which may be built
with a different configuration does not overwrite your system's instillation of
Lua.

Now run make linux, make macosx, or make mingw depending on what system Retro
Graphics Toolkit is being compiled for.

DO NOT RUN MAKE INSTALL.

===============================================================================
			       WINDOWS ONLY BEGIN
===============================================================================

This step is only for Windows users. On other operating system, the
distribution should already have provided FLTK.

You will now need to build FLTK to do this download fltk-1.3.3 and extract it
into the Retro Graphics Toolkit project folder and build it using either
./configure if you are on Windows or if you are cross compiling you need to do
something like this:

RANLIB=~/mingw/bin/x86_64-w64-mingw32-gcc-ranlib NM=~/mingw/bin/x86_64-w64-mingw32-gcc-nm AR=~/mingw/bin/x86_64-w64-mingw32-gcc-ar CFLAGS="-O2 -flto=16 -fuse-linker-plugin -m32" CXXFLAGS=$CFLAGS LDFLAGS=$CFLAGS ./configure --host=x86_64-w64-mingw32 --build=x86_64-unknown-linux-gnu

Regardless of how ./configure is ran you will just need to run make and you are
done building FLTK.


Optional step to reduce binary size: Run these two commands in the lib
directory where GCC was compiled. Do likewise in the folder called
x86_64-w64-mingw32 (may be different depending on how you compiled your mingw
toolchain)


find -name '*.o' -o  -name '*.a' -exec x86_64-w64-mingw32-strip  -R '.rdata$zzz' {} \;

find -name '*.o' -o  -name '*.a' -exec x86_64-w64-mingw32-ranlib  {} \;

The purpose of these two commands is to remove all the GCC version strings. If
you don't run this command you will hundreds of duplicate GCC version strings
in the final binary.

===============================================================================
			  END OF WINDOWS ONLY SECTION
===============================================================================

Now on Linux run make or on Windows run make -f make_win note that you may need
to modify the CXX and CC variables in make_win.

You should now have a compiled version of Retro Graphics Toolkit.

